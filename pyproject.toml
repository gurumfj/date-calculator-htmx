[project]
name = "cleansales-backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "Pierre Wu", email = "gurumfj@gmail.com" }
]
requires-python = ">=3.12"

dependencies = [
    "pandas>=2.2.3",
    "pydantic>=2.10.6",
    "openpyxl>=3.1.5",
    "sqlmodel>=0.0.22",
    "fastapi>=0.110.0",
    "uvicorn>=0.28.0",
    "python-multipart>=0.0.9",
    "requests>=2.32.3",
    "types-requests>=2.32.0.20241016",
    "python-dotenv>=1.0.1",
    "pydantic-settings>=2.8.1",
    "mcp[cli]>=1.3.0",
    "tabulate>=0.9.0",
    "wcwidth>=0.2.13",
]

[project.optional-dependencies]
dev = [
    "pandas-stubs>=2.2.0.230",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "mypy>=1.15.0",
    "ruff>=0.9.6",
    "basedpyright"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/cleansales_backend"]

[tool.hatch.metadata]
allow-direct-references = true

[project.scripts]
cleansales = "cleansales_backend.cli:main"
cleansales-api = "cleansales_backend.api:main"
cleansales-mcp = "cleansales_backend.mcp:main"

[tool.pytest.ini_options]
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]

[tool.mypy]
python_version = "3.12"
strict = true
exclude = "^.*_.*\\.py$, ^out/"
explicit_package_bases = true
namespace_packages = true
warn_return_any = true
warn_unused_configs = true
mypy_path = ["src"]
[[tool.mypy.overrides]]
module = "numpy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "wcwidth"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "modules.*"
ignore_missing_imports = false

[tool.ruff]
# Assume Python 3.12
target-version = "py312"
line-length = 88
indent-width = 4

# Enable auto-fix
fix = true

# Exclude commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`), pycodestyle (`E`), isort (`I`), and naming (`N`)
select = [
    "E",  # pycodestyle errors
    "F",  # Pyflakes
    "I",  # isort
    "N",  # pep8-naming
]
# ignore = ["E731"]

# Allow fix for all enabled rules
fixable = ["ALL"]

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.basedpyright]
include = ["src"]
exclude = ["**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs"
]
# ignore = []
defineConstant = { DEBUG = true }
# stubPath = "out/"

# reportMissingImports = false
# reportMissingTypeStubs = false
# reportUnknownVariableType = false

pythonVersion = "3.12"
pythonPlatform = "macOS"

typeCheckingMode = "recommended"  # 推荐的类型检查模式
reportAny = false
reportMissingTypeStubs = false
reportUnknownVariableType = false
reportUnknownMemberType = false
# useLibraryCodeForTypes = true  # 使用庫代碼作為類型來源

# executionEnvironments = [
#   { root = "src/web", pythonVersion = "3.5", pythonPlatform = "Windows", extraPaths = [ "src/service_libs" ], reportMissingImports = "warning" },
#   { root = "src/sdk", pythonVersion = "3.0", extraPaths = [ "src/backend" ] },
#   { root = "src/tests", reportPrivateUsage = false, extraPaths = ["src/tests/e2e", "src/sdk" ]},
#   { root = "src" }
# ]
