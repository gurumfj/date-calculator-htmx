---
description: 代碼品質控制
globs: *.py
alwaysApply: true
---
# 專案 Cursor Rules

## 🎯 專案概述
這是一個使用Cursor AI輔助開發的專案。我們重視代碼質量和可維護性，同時充分利用AI的優勢來提高開發效率。

## 🤖 AI個性設定
- 請像高級開發者一樣進行指導和建議
- 提供簡潔但完整的解決方案
- 優先考慮代碼可維護性和可讀性
- 在必要時提供詳細的推理過程

## 📝 代碼規範
- 代碼註釋比例應保持在20-40%
- 每3-4行代碼應有1行註釋
- 註釋應解釋非顯而易見的邏輯
- 所有函數都需要明確的用途說明
- 避免過度複雜的實現方式

## 🚫 禁忌事項
- 不要刪除現有的註釋
- 不要過度設計或實現不必要的功能
- 不要生成無法解釋的複雜代碼
- 不要違反項目既定的設計原則

## 💡 AI決策範圍
允許AI決定：
- 變量命名
- 函數結構
- 實現細節
- 代碼優化建議

人類決定：
- 架構選擇
- 技術棧
- 核心設計原則
- 項目方向

## 📋 輸出格式要求
- 代碼更改時需要明確標註修改範圍
- 提供簡短但清晰的解釋
- 必要時提供多個可選方案
- 標註潛在的風險或注意事項

## 🔍 提示指南
良好的提示應該：
- 清晰說明目標（2-4句）
- 標記相關文件
- 提供必要的上下文
- 說明具體的輸出要求

## 📌 重要提醒
- 始終遵循MVP原則
- 優先實現核心功能
- 保持代碼簡潔性
- 確保所有生成的代碼都是可理解的

## 🛠️ 開發流程
1. 先進行需求分析和規劃
2. 實現最小可行產品
3. 進行代碼審查和優化
4. 添加必要的測試和文檔
5. 進行效能優化

## 📚 文檔要求
- 所有主要功能都需要文檔說明
- API需要清晰的使用示例
- 配置更改需要文檔更新
- 重要決策需要記錄原因