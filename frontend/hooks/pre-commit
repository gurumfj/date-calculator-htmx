#!/bin/bash

# pre-commit hook
# 執行輕量級檢查以快速驗證代碼，不中斷開發流程

# 獲取當前目錄
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"

# 切換到專案根目錄
cd "$PROJECT_ROOT" || exit 1

# 顏色定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 檢查是否需要跳過檢查
commit_msg=$(git log -1 --pretty=%B 2>/dev/null || echo "")
if [[ "$commit_msg" == *"[skip-checks]"* ]] || [[ "$1" == "--no-verify" ]]; then
  echo -e "${YELLOW}警告: 檢查被明確跳過 [skip-checks]${NC}"
  exit 0
fi

echo -e "${YELLOW}執行提交前檢查...${NC}"

# 執行 TypeScript 類型檢查 (快速模式)
echo -e "${YELLOW}執行 TypeScript 類型檢查...${NC}"
bun run typecheck

if [ $? -ne 0 ]; then
  echo -e "${RED}❌ TypeScript 類型檢查失敗!${NC}"
  echo -e "${YELLOW}提示: 可以使用 [skip-checks] 在提交信息中跳過檢查${NC}"
  echo -e "${YELLOW}      或使用 git commit --no-verify 跳過所有檢查${NC}"
  exit 1
fi

# 檢查是否有 console.log 語句 (排除某些文件)
echo -e "${YELLOW}檢查 console.log 語句...${NC}"
FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.tsx?$' | grep -v 'test\|mock\|config\|setup\|vite')

if [ -n "$FILES" ]; then
  # 檢查文件中是否含有 console.log
  CONSOLE_LOGS=$(grep -l "console.log" $FILES | grep -v 'utils/logger\|debug')
  if [ -n "$CONSOLE_LOGS" ]; then
    echo -e "${YELLOW}警告: 以下文件包含 console.log 語句:${NC}"
    for file in $CONSOLE_LOGS; do
      echo "  - $file"
    done
    echo -e "${YELLOW}提示: 在生產環境中應避免使用 console.log${NC}"
    # 這裡只是警告，不阻止提交
  fi
fi

echo -e "${GREEN}✅ 所有檢查通過!${NC}"
exit 0
